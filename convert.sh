{
  cat << JAVASCRIPT
/* global module, optional, choice, seq, grammar, field, repeat */
module.exports = grammar({
JAVASCRIPT
  cat "Cobol.g4" |
  sed -z \
      -e 's/\n\s*:/:/g' \
      -e 's/\n\s*,/,/g' \
      -e 's/\n\s*;/;/g' \
      -e 's/\n\n/\n/g' \
      -e 's/ -> channel(HIDDEN)//g' \
      - |
  sed \
      -e 's/;/,/g' \
      -e 's/grammar Cobol/name: "Cobol"/g' \
      -e $'s@(\'\(.\)\'\s*|\s*\'\(.\)\')''@/[\1\2]/@g' \
      -e 's/(\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\))/choice(\1, \2, \3, \4, \5)/g' \
      -e 's/(\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\))/choice(\1, \2, \3)/g' \
      -e 's/(\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\))/choice(\1, \2)/g' \
      -e 's/\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)/choice(\1, \2, \3, \4, \5, \6, \7)/g' \
      -e 's/\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)/choice(\1, \2, \3, \4, \5, \6)/g' \
      -e 's/\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)/choice(\1, \2, \3, \4, \5)/g' \
      -e 's/\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)/choice(\1, \2, \3, \4)/g' \
      -e 's/\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)/choice(\1, \2, \3)/g' \
      -e 's/\(\w\w*[+?*]\?\)\s*|\s*\(\w\w*[+?*]\?\)/choice(\1, \2)/g' \
      -e 's/~\[/[^/g' \
      -e 's/\(\w\w*\)\*/repeat(\1)/g' \
      -e 's/\(\w\w*\)+/repeat1(\1)/g' \
      -e 's/\(\w\w*\)?/optional(\1)/g' \
      -e 's/^fragment\s*/_/g' \
      -e 's/^\(\w\w*\)\s*:\s*/\1: ($) => /g' \
      -
echo '})'
} > grammar2.js